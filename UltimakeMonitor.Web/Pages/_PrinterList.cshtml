@model List<UltimakeMonitor.Web.Models.Printer>
@using UltimakeMonitor.Web.Models

<div class="row">
    @if (Model.Any())
    {
        @foreach (var printer in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card printer-card h-100" data-printer-id="@printer.Id" onclick="showPrinterDetails('@printer.Id')">
                    <div class="card-header">
                        <h5 class="card-title mb-0">@printer.Name</h5>
                        <small class="text-muted">@printer.Model</small>
                    </div>
                    <div class="card-body">
                        <div class="mb-2">
                            <span class="badge bg-@GetStatusColor(printer.Status)">@printer.Status</span>
                        </div>
                        <p class="card-text">
                            <strong>IP:</strong> @printer.IpAddress<br />
                            <strong>Bed:</strong> @(printer.BedTemperature?.ToString("F1") ?? "N/A")°C<br />
                            <strong>Nozzle:</strong> @(printer.NozzleTemperature?.ToString("F1") ?? "N/A")°C
                        </p>
                        @if (printer.CurrentJob != null)
                        {
                            <div class="mt-3">
                                <p class="mb-1"><strong>Current Job:</strong> @printer.CurrentJob.Name</p>
                                <div class="progress">
                                    <div class="progress-bar" role="progressbar" 
                                         style="width: @printer.CurrentJob.ProgressPercentage%"
                                         aria-valuenow="@printer.CurrentJob.ProgressPercentage" 
                                         aria-valuemin="0" aria-valuemax="100">
                                        @printer.CurrentJob.ProgressPercentage%
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="card-footer text-muted">
                        Last seen: @printer.LastSeen.ToString("g")
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12 text-center">
            <p class="text-muted">No printers found. Click the button below to discover printers on your network.</p>
            <button class="btn btn-primary" onclick="discoverPrinters()">Discover Printers</button>
        </div>
    }
</div>

@functions {
    private string GetStatusColor(PrinterStatus status)
    {
        return status switch
        {
            PrinterStatus.Idle => "success",
            PrinterStatus.Printing => "primary",
            PrinterStatus.Paused => "warning",
            PrinterStatus.Error => "danger",
            PrinterStatus.Offline => "secondary",
            PrinterStatus.Maintenance => "info",
            _ => "secondary"
        };
    }
}