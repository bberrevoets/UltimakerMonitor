@page
@using UltimakeMonitor.Web.Models
@model IndexModel
@{
    ViewData["Title"] = "Printer Monitor";
}

<div class="text-center">
    <h1 class="display-4">Ultimaker Printer Monitor</h1>
    <p class="lead">Real-time monitoring of your 3D printers</p>
</div>

<div class="container mt-4">
    <div class="row">
        @if (Model.Printers.Any())
        {
            @foreach (var printer in Model.Printers)
            {
                <div class="col-md-4 mb-4">
                    <div class="card printer-card h-100" data-printer-id="@printer.Id" onclick="showPrinterDetails('@printer.Id')">
                        <div class="card-header">
                            <h5 class="card-title mb-0">@printer.Name</h5>
                            <small class="text-muted">@printer.Model</small>
                        </div>
                        <div class="card-body">
                            <div class="mb-2">
                                <span class="badge bg-@GetStatusColor(printer.Status)">@printer.Status</span>
                            </div>
                            <p class="card-text">
                                <strong>IP:</strong> @printer.IpAddress<br />
                                <strong>Bed:</strong> @(printer.BedTemperature?.ToString("F1") ?? "N/A")°C<br />
                                <strong>Nozzle:</strong> @(printer.NozzleTemperature?.ToString("F1") ?? "N/A")°C
                            </p>
                            @if (printer.CurrentJob != null)
                            {
                                <div class="mt-3">
                                    <p class="mb-1"><strong>Current Job:</strong> @printer.CurrentJob.Name</p>
                                    <div class="progress">
                                        <div class="progress-bar" role="progressbar" 
                                             style="width: @printer.CurrentJob.ProgressPercentage%"
                                             aria-valuenow="@printer.CurrentJob.ProgressPercentage" 
                                             aria-valuemin="0" aria-valuemax="100">
                                            @printer.CurrentJob.ProgressPercentage%
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="card-footer text-muted">
                            Last seen: @printer.LastSeen.ToString("g")
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center">
                <p class="text-muted">No printers found. Click the button below to discover printers on your network.</p>
                <button class="btn btn-primary" onclick="discoverPrinters()">Discover Printers</button>
            </div>
        }
    </div>
</div>

<!-- Printer Details Modal -->
<div class="modal fade" id="printerDetailsModal" tabindex="-1" aria-labelledby="printerDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="printerDetailsModalLabel">Printer Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="printerDetailsContent">
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="refreshPrinterDetails()">Refresh</button>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusColor(PrinterStatus status)
    {
        return status switch
        {
            PrinterStatus.Idle => "success",
            PrinterStatus.Printing => "primary",
            PrinterStatus.Paused => "warning",
            PrinterStatus.Error => "danger",
            PrinterStatus.Offline => "secondary",
            PrinterStatus.Maintenance => "info",
            _ => "secondary"
        };
    }
}

@section Scripts {
    <script>
        let currentPrinterId = null;

        function showPrinterDetails(printerId) {
            currentPrinterId = printerId;
            const modal = new bootstrap.Modal(document.getElementById('printerDetailsModal'));
            modal.show();
            loadPrinterDetails(printerId);
        }

        function refreshPrinterDetails() {
            if (currentPrinterId) {
                loadPrinterDetails(currentPrinterId);
            }
        }

        async function loadPrinterDetails(printerId) {
            const contentDiv = document.getElementById('printerDetailsContent');
            contentDiv.innerHTML = '<div class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>';

            try {
                const response = await fetch(`/Index?handler=PrinterDetails&id=${printerId}`);
                if (response.ok) {
                    const html = await response.text();
                    contentDiv.innerHTML = html;
                } else {
                    contentDiv.innerHTML = '<div class="alert alert-danger">Failed to load printer details</div>';
                }
            } catch (error) {
                console.error('Error loading printer details:', error);
                contentDiv.innerHTML = '<div class="alert alert-danger">Error loading printer details</div>';
            }
        }

        async function discoverPrinters() {
            // TODO: Implement printer discovery
            alert('Printer discovery will be implemented soon!');
        }
    </script>
}
